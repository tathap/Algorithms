    ll lo = 0; ll hi = 1e10;
    hi++;
    
    while (lo < hi) {
        ll mid = lo + (hi - lo)/2;

        if (works(mid) <= works(mid+1)) {
            hi = mid;
        } else {
            lo = mid+1;
        }
    }
    
    if (lo-1 == 1e10) {
        cout << -1 << endl;
        return;
    }

Let's assume that our interval is first decreasing and then increasing. Then we will binary search to find the minimum value x such
that f(x) <= f(x+1). This will allow us to use binary search to implement a ternary search.
